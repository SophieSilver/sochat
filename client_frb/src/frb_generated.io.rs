// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// Section: imports

use super::*;
use crate::api::service::*;
use crate::api::types::id::IdExt;
use crate::api::types::id::*;
use crate::api::types::message::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::{transform_result_dco, Lifetimeable, Lockable};
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

// Section: dart2rust

impl CstDecode<flutter_rust_bridge::for_generated::anyhow::Error>
    for *mut wire_cst_list_prim_u_8_strict
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> flutter_rust_bridge::for_generated::anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<ChatMessage> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ChatMessage {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChatMessage>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<MessageId> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> MessageId {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageId>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Service> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Service {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Service>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<UserId> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> UserId {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserId>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChatMessage>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChatMessage>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageId>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageId>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Service>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Service>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserId>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserId>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__init__init_app(port_: i64) {
    wire__crate__api__init__init_app_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__service__Service_get_message(
    that: usize,
    from: usize,
    to: usize,
    index: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__service__Service_get_message_impl(that, from, to, index)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__service__Service_message_count(
    that: usize,
    from: usize,
    to: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__service__Service_message_count_impl(that, from, to)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__service__Service_new(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__service__Service_new_impl()
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__service__Service_send_message(
    that: usize,
    from: usize,
    to: usize,
    message: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__service__Service_send_message_impl(that, from, to, message)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__MessageId_equals(
    that: usize,
    other: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__MessageId_equals_impl(that, other)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__MessageId_hash_code(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__MessageId_hash_code_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__MessageId_parse(
    value: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__MessageId_parse_impl(value)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__MessageId_to_string_dart(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__MessageId_to_string_dart_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__UserId_equals(
    that: usize,
    other: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__UserId_equals_impl(that, other)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__UserId_hash_code(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__UserId_hash_code_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__UserId_parse(
    value: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__UserId_parse_impl(value)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__id__UserId_to_string_dart(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__id__UserId_to_string_dart_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_get_content(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_get_content_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_get_from(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_get_from_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_get_id(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_get_id_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_get_to(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_get_to_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_set_content(
    that: usize,
    content: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_set_content_impl(that, content)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_set_from(
    that: usize,
    from: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_set_from_impl(that, from)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_set_id(
    that: usize,
    id: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_set_id_impl(that, id)
}

#[no_mangle]
pub extern "C" fn frbgen_client_wire__crate__api__types__message__ChatMessage_auto_accessor_set_to(
    that: usize,
    to: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__types__message__ChatMessage_auto_accessor_set_to_impl(that, to)
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChatMessage(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChatMessage>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChatMessage(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChatMessage>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMessageId(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageId>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMessageId(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageId>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerService(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Service>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerService(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Service>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUserId(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserId>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUserId(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserId>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_client_cst_new_list_prim_u_8_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_strict {
    let ans = wire_cst_list_prim_u_8_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_strict {
    ptr: *mut u8,
    len: i32,
}
